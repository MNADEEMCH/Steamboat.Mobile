<?xml version="1.0" encoding="UTF-8"?>
<views:CustomContentPage xmlns="http://xamarin.com/schemas/2014/forms" 
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
    x:Class="Steamboat.Mobile.Views.InitPasswordView"
    xmlns:viewModelBase="clr-namespace:Steamboat.Mobile.ViewModels;assembly=Steamboat.Mobile"
    xmlns:views="clr-namespace:Steamboat.Mobile.Views"
    xmlns:customControl="clr-namespace:Steamboat.Mobile.CustomControls;assembly=Steamboat.Mobile"
    xmlns:extension="clr-namespace:Steamboat.Mobile.Extensions;assembly=Steamboat.Mobile"
    viewModelBase:ViewModelAutoWire.AutoWireViewModel="true"
    BackgroundColor="{StaticResource ViewBackground}"
    Title="Change password">
    <ContentPage.Resources>
        <ResourceDictionary>
            <extension:FirstValidationErrorConverter x:Key="FirstValidationErrorConverter" />
             <Style x:Key="MainGrid"  TargetType="Grid">
                <Setter Property="RowSpacing" Value="0" />
                <Setter Property="ColumnSpacing" Value="0" />
            </Style>
            <Style x:Key="MainContainerStackLayout"  TargetType="StackLayout">
                 <Setter Property="Padding">
                    <Setter.Value>
                        <OnIdiom x:TypeArguments="Thickness">
                            <OnIdiom.Phone>40,32</OnIdiom.Phone>    
                            <OnIdiom.Tablet>80,32,80,32</OnIdiom.Tablet>    
                        </OnIdiom> 
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="PasswordEntry" TargetType="customControl:ImageEntry" BasedOn="{StaticResource MainFormEntry}">
                <Setter Property="Margin" Value="0,16,0,0" />
                <Setter Property="Image" Value="icLock.png" />
                <Setter Property="IsPassword" Value="True" />
            </Style>

            <Style x:Key="ReenterEntry" TargetType="customControl:ImageEntry" BasedOn="{StaticResource MainFormEntry}">
                <Setter Property="Margin" Value="0,16,0,0" />
                <Setter Property="Image" Value="icReenter.png" />
                <Setter Property="IsPassword" Value="True" />
            </Style>

            <Style x:Key="LoginButton" TargetType="customControl:GradientRoundedButton" BasedOn="{StaticResource MainGradientButton}">
                <Setter Property="Margin" Value="0,32,0,0" />
            </Style>

            <Style x:Key="HeaderLabel" TargetType="Label">
                <Setter Property="FontFamily" Value="{DynamicResource OpenSansBold}" />
                <Setter Property="TextColor" Value="{StaticResource DarkBlueColor}" />
                <Setter Property="BackgroundColor" Value="{StaticResource SubtleBlueColor}" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="VerticalTextAlignment" Value="Center" />
                <Setter Property="HorizontalTextAlignment" Value="Center" />
            </Style>

            <Style x:Key="FormLabel" TargetType="Label">
                <Setter Property="FontFamily" Value="{DynamicResource OpenSansRegular}" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="TextColor" Value="{StaticResource DarkGrayColor}" />
            </Style>

            <Style x:Key="ErrorLabel" TargetType="Label">
                <Setter Property="FontFamily" Value="{DynamicResource OpenSansSemiBold}" />
                <Setter Property="TextColor" Value="{StaticResource RedColor}" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Margin" Value="0,2,0,0" />
            </Style>

            <Style x:Key="MainIndicator" TargetType="ActivityIndicator">
                <Setter Property="WidthRequest" Value="40" />
                <Setter Property="HeightRequest" Value="40" />
                <Setter Property="Color" Value="{StaticResource MomentumBlueColor}" />
                <Setter Property="Margin" Value="0,26,0,0" />
                <Setter Property="IsRunning" Value="true" />
            </Style>
            
        </ResourceDictionary>
    </ContentPage.Resources>
	<ContentPage.Content>
        <Grid RowSpacing="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <ScrollView Grid.Row="0" IsVisible="{Binding IsLoading, Converter={StaticResource InverseBoolConverter}}" VerticalOptions="FillAndExpand" >
                <Grid Style="{StaticResource MainGrid}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="32" />
                        <RowDefinition Height="Auto" />                       
                    </Grid.RowDefinitions>

                    <Label Grid.Row="0" Text="CREATE A NEW PASSWORD" Style="{StaticResource HeaderLabel}"/>

                    <StackLayout Grid.Row="1" Style="{StaticResource MainContainerStackLayout}">
                        <Label Text="Now let's change your password to something that only you know." FontFamily="{DynamicResource OpenSansSemiBold}" TextColor="{StaticResource StoneBlueColor}" FontSize="14" Margin="0,0,0,24" />
                        <Label Text="Keep in mind that that your password should:" Style="{StaticResource FormLabel}" Margin="0,0,0,8" />
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />  
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />                       
                            </Grid.ColumnDefinitions>
                            <Label Text="  &#8226;" Style="{StaticResource FormLabel}" />
                            <Label Grid.Column="1" Text="Be between 7 and 25 characters long" Style="{StaticResource FormLabel}" />
                            
                            <Label Grid.Row="1" Text="  &#8226;" Style="{StaticResource FormLabel}" />
                            <Label Grid.Row="1" Grid.Column="1" Text="Contain at least one upper-case letter" Style="{StaticResource FormLabel}" />
                            
                            <Label Grid.Row="2" Text="  &#8226;" Style="{StaticResource FormLabel}" />
                            <Label Grid.Row="2" Grid.Column="1" Text="Contain at least one lower-case letter" Style="{StaticResource FormLabel}" />
                            
                            <Label Grid.Row="3" Text="  &#8226;" Style="{StaticResource FormLabel}" />
                            <Label Grid.Row="3" Grid.Column="1" Text="Contain at least one number" Style="{StaticResource FormLabel}" />
                            
                            <Label Grid.Row="4" Text="  &#8226;" Style="{StaticResource FormLabel}" /> 
                            <Label Grid.Row="4" Grid.Column="1" Text="Contain no spaces" Style="{StaticResource FormLabel}"/>  
                        </Grid>               
                        <customControl:ImageEntry Text="{Binding Password.Value, Mode=TwoWay}" Placeholder="NEW PASSWORD" Style="{StaticResource PasswordEntry}" >
                            <customControl:ImageEntry.Behaviors>
                                <extension:EventToCommandBehavior
                                    EventName="Unfocused"
                                    Command="{Binding ValidatePasswordFocusCommand}" />
                            </customControl:ImageEntry.Behaviors>
                            <customControl:ImageEntry.Triggers>
                                <DataTrigger TargetType="customControl:ImageEntry" Binding="{Binding Password.IsValid}" Value="False">
                                    <Setter Property="BorderColor" Value="{StaticResource RedColor}" />
                                </DataTrigger>                               
                            </customControl:ImageEntry.Triggers>
                        </customControl:ImageEntry>
                        <Label Text="{Binding Password.Errors, Converter={StaticResource FirstValidationErrorConverter}" Style="{StaticResource ErrorLabel}" />
                        <customControl:ImageEntry Text="{Binding Confirm.Value, Mode=TwoWay}" Placeholder="CONFIRM PASSWORD" Style="{StaticResource ReenterEntry}" >
                            <customControl:ImageEntry.Behaviors>
                                <extension:EventToCommandBehavior
                                    EventName="Unfocused"
                                    Command="{Binding ValidatePasswordFocusCommand}" />
                            </customControl:ImageEntry.Behaviors>
                            <customControl:ImageEntry.Triggers>
                                <DataTrigger TargetType="customControl:ImageEntry" Binding="{Binding Confirm.IsValid}" Value="False">
                                    <Setter Property="BorderColor" Value="{StaticResource RedColor}" />
                                </DataTrigger>                               
                            </customControl:ImageEntry.Triggers>
                        </customControl:ImageEntry>
                        
                        <customControl:GradientRoundedButton  Text="UPDATE" Command="{Binding UpdateCommand}" Style="{StaticResource LoginButton}" IsEnabled="{Binding ButtonEnabled}" IsVisible="{Binding IsBusy, Converter={StaticResource InverseBoolConverter}}" />
                        <Grid IsVisible="false" />
                        <ActivityIndicator Style="{StaticResource MainIndicator}" IsVisible="{Binding IsBusy}" />
                        
                    </StackLayout>

                </Grid>
            </ScrollView>
            <ActivityIndicator
            Grid.Row="0"
            Color="{StaticResource MomentumBlueColor}"
            IsRunning="{Binding IsLoading}"  
            IsVisible="{Binding IsLoading}"
            VerticalOptions="Center"
            HorizontalOptions="Center"
            WidthRequest="100" />
        </Grid>
	</ContentPage.Content>
</views:CustomContentPage>
